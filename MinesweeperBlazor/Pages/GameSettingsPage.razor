@page "/gameSettings";
@page "/MinesweeperBlazor/gameSettings"
<h3 class="text-center">Game settings page</h3>
@if (gameLevels is null)
{
<p><em>Loading...</em></p>
}
else
{
<div class="container">
    <EditForm EditContext="@editContext" @ref="@editForm">
        <FluentValidationValidator></FluentValidationValidator>
        <div class="row">
            <div class="col-sm-4">
                <h4>Select game level: </h4>
                    @foreach (var level in gameLevels)
                    {
                        if (level.Name == "Custom Field")
                        {
                            continue;
                        }
                        <div class="form-check">
                            <input @onchange="@((r)=>OnSelectedLevelChanged(r, level))" value="@level" class="form-check-input" type="radio" name="flexRadioDefault" id="@level.Name" checked="@(level.Name == gameLevels.First().Name)" />
                            <div for="@level.Name">
                                <label class="form-check-label" for="@level.Name">@level.Name</label>
                                <br />
                                <label>Rows: @level.GameConfiguration.Rows</label>
                                <br />
                                <label>Columns: @level.GameConfiguration.Columns</label>
                                <br />
                                <label>Bombs count: @level.GameConfiguration.BombsCount</label>
                            </div>
                        </div>
                    }

            </div>
            <div class="col-sm-8">
                <br />
                <div class="form-check">
                    <input type="radio" name="flexRadioDefault" @onchange="OnSpecialFieldSelected" checked="@isSpecialFieldSelected" class="form-check-input" id="flexRadioSpecial" />

                    <label class="form-check-label" for="flexRadioSpecial">
                        Special field
                    </label>
                </div>
                <div class="text-left">
                    <div class="form-group">
                        <label for="inputRows">Rows: (from 2 to 60)</label>
                        <InputNumber @bind-Value="customGameSettings.Rows" class="form-control" id="inputRows" placeholder="Enter rows count" />
                        <ValidationMessage For="@(() => customGameSettings.Rows)" />
                    </div>
                    <div class="form-group">
                        <label for="inputColumns">Columns: (from 2 to 16)</label>
                        <InputNumber @bind-Value="customGameSettings.Columns" class="form-control" id="inputColumns" placeholder="Enter columns count" />
                        <ValidationMessage For="@(() => customGameSettings.Columns)" />
                    </div>
                    <div class="form-group">
                        <label for="inputBombs">Bombs: </label>
                        <InputNumber @bind-Value="customGameSettings.BombsCount" class="form-control" id="inputBombs" placeholder="Enter bombs count" />
                        <ValidationMessage For="@(() => customGameSettings.BombsCount)" />
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
</div>
}
<Footer PrimaryButtonText="Apply" OnSecondaryButtonClicked="OnCancelClicked" OnPrimaryButtonClicked="OnApplyClicked"></Footer>

