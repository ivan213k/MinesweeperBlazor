@inject IBlazorTimer BlazorTimer;
<div oncontextmenu="return false;" class="container">
    <div class="row game-bar-container">
        <div class="col-sm grid-item">
            <img style="width:50px" src="/images/icon.png" />
            <label style="vertical-align:central">@BombsCount</label>
        </div>
        <div class="col-sm grid-item">
            <img style="width:50px" src="/images/Timer.png" />
            <label style="vertical-align:central">@TimerTicks</label>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int BombsCount { get; set; }

    public int TimerTicks { get; set; }

    protected override void OnInitialized()
    {
        BlazorTimer.OnTimerTicked += OnTimerTick;
        BlazorTimer.SetInterval(1000);
        StartTimer();
    }

    public void StartTimer()
    {
        ResetTicks();
        BlazorTimer.Start();
    }
    public void StopTimer()
    {
        BlazorTimer.Stop();
    }
    public void IncrementBombsCount()
    {
        BombsCount++;
        StateHasChanged();
    }
    public void DecrementBombsCount()
    {
        BombsCount--;
        StateHasChanged();
    }
    public void SetBombsCount(int bombsCount)
    {
        BombsCount = bombsCount;
        StateHasChanged();
    }
    private void OnTimerTick()
    {
        TimerTicks++;
        StateHasChanged();
    }
    private void ResetTicks()
    {
        TimerTicks = 0;
    }
}
